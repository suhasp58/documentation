git clone https://github.com/suhasp58/data-pusher.git
git clone https://github.com/suhasp58/JSONFile.git
git clone https://github.com/suhasp58/data-retriever.git
        apt-get update
        apt-get upgrade
            apt-get install redis-server
            systemctl start redis-server.service
            sed -i 's/bind 127.0.0.1 ::1/bind 0.0.0.2/g' /etc/redis/redis.conf
            systemctl stop redis-server.service
            systemctl start redis-server.service


cd /home/build_sc/data-pusher/src/main/java/com/suhas
sed  -i 's/"localhost"/"192.168.195.233"/g' controller.java

cd /home/build_sc/data-retriever/src/main/java/com/redis
sed -i 's/"localhost"/"192.168.195.233"/g' clientcontroller.java

mkdir /home/build_sc/data-pusher/service1  /home/build_sc/data-pusher/service2 /home/build_sc/data-pusher/service3 /home/build_sc/data-pusher/service4

cd /home/build_sc/data-pusher/service1

echo 'FROM openjdk:8-jdk'>Dockerfile
echo 'COPY springredis.jar /usr/app/'>>Dockerfile
echo 'COPY JSONFile1.txt /test/' >>Dockerfile
echo 'WORKDIR /usr/app'>>Dockerfile
echo 'EXPOSE 8080'>>Dockerfile
echo 'ENTRYPOINT ["java","-jar","-Dserver.port=8081","springredis.jar","8081", "5000","/test/JSONFile1.txt"]' >>Dockerfile

cd /home/build_sc/data-pusher/service2

echo 'FROM openjdk:8-jdk'>Dockerfile
echo 'COPY springredis.jar /usr/app/'>>Dockerfile
echo 'COPY JSONFile2.txt /test/' >>Dockerfile
echo 'WORKDIR /usr/app'>>Dockerfile
echo 'EXPOSE 8080'>>Dockerfile
echo 'ENTRYPOINT ["java","-jar","-Dserver.port=8082","springredis.jar","8082","5000","/test/JSONFile2.txt"]' >>Dockerfile

cd /home/build_sc/data-pusher/service3

echo 'FROM openjdk:8-jdk'>Dockerfile
echo 'COPY springredis.jar /usr/app/'>>Dockerfile
echo 'COPY JSONFile3.txt /test/' >>Dockerfile
echo 'WORKDIR /usr/app'>>Dockerfile
echo 'EXPOSE 8080'>>Dockerfile
echo 'ENTRYPOINT ["java","-jar","-Dserver.port=8083","springredis.jar","8083","5000","/test/JSONFile3.txt"]' >>Dockerfile

cd /home/build_sc/data-pusher/service4

echo 'FROM openjdk:8-jdk'>Dockerfile
echo 'COPY springredis.jar /usr/app/'>>Dockerfile
echo 'COPY JSONFile4.txt /test/' >>Dockerfile
echo 'WORKDIR /usr/app'>>Dockerfile
echo 'EXPOSE 8080'>>Dockerfile
echo 'ENTRYPOINT ["java","-jar","-Dserver.port=8084","springredis.jar","8084","5000","/test/JSONFile4.txt"]' >>Dockerfile

mkdir /home/build_sc/data-retriever/docker
cd /home/build_sc/data-retriever/docker
echo 'FROM openjdk:8-jdk'>Dockerfile
echo 'COPY RedisClient.jar /usr/app/'>>Dockerfile
echo 'WORKDIR /usr/app'>>Dockerfile
echo 'EXPOSE 8080'>>Dockerfile
echo 'ENTRYPOINT ["java","-jar","-Dserver.port=8089","RedisClient.jar"]' >>Dockerfile
cd /home/build_sc/data-pusher
mvn clean install
cd target
cp springredis-0.0.1-SNAPSHOT.jar /home/build_sc/data-pusher/service1/springredis.jar
cp springredis-0.0.1-SNAPSHOT.jar /home/build_sc/data-pusher/service2/springredis.jar
cp springredis-0.0.1-SNAPSHOT.jar /home/build_sc/data-pusher/service3/springredis.jar
cp springredis-0.0.1-SNAPSHOT.jar /home/build_sc/data-pusher/service4/springredis.jar
cd /home/build_sc/JSONFile
cp JSONFile1.txt /home/build_sc/data-pusher/service1/JSONFile1.txt
cp JSONFile2.txt /home/build_sc/data-pusher/service2/JSONFile2.txt
cp JSONFile3.txt /home/build_sc/data-pusher/service3/JSONFile3.txt
cp JSONFile4.txt /home/build_sc/data-pusher/service4/JSONFile4.txt


cd /home/build_sc/data-retriever
mvn clean install
cd target
cp  springclient-0.0.1-SNAPSHOT.jar /home/build_sc/data-retriever/docker/RedisClient.jar

cd /home/build_sc/data-pusher/service1
docker build --tag=service1:v1 .
docker run -d -p 8081:8080 service1:v1

cd /home/build_sc/data-pusher/service1
docker build --tag=service2:v1 .
docker run -d -p 8082:8080 service2:v1

cd /home/build_sc/data-pusher/service1
docker build --tag=service3:v1 .
docker run -d -p 8083:8080 service3:v1

cd /home/build_sc/data-pusher/service1
docker build --tag=service4:v1 .
docker run -d -p 8084:8080 service4:v1

cd /home/build_sc/data-retriever/docker
docker build --tag=retriever:v1 .
docker run -d -p 8089:8080 retriever:v1
